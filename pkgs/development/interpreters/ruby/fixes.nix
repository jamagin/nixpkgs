# The standard set of gems in nixpkgs including potential fixes.
#
# The gemset is derived from two points of entry:
# - An attrset describing a gem, including version, source and dependencies
#   This is just meta data, most probably automatically generated by a tool
#   like Bundix (https://github.com/aflatter/bundix).
#   {
#     name = "bundler";
#     version = "1.6.5";
#     sha256 = "1s4x0f5by9xs2y24jk6krq5ky7ffkzmxgr4z1nhdykdmpsi2zd0l";
#     dependencies = [ "rake" ];
#   }
# - An optional derivation that may override how the gem is built. For popular
#   gems that don't behave correctly, fixes are already provided in the form of
#   derivations.
#
# This seperates "what to build" (the exact gem versions) from "how to build"
# (to make gems behave if necessary).

{ lib, fetchurl, writeScript, ruby, libxml2, libxslt, python, stdenv, which
, libiconv, postgresql, v8_3_16_14, clang }:

let
  v8 = v8_3_16_14;

in

{
  bundler = attrs: {
    dontPatchShebangs = true;
  };

  libv8 = attrs: {
    buildFlags = [ "--with-system-v8" ];
    buildInputs = [ which v8 python ];
  };

  nokogiri = attrs: {
    buildFlags = [
      "--use-system-libraries"
      "--with-zlib-dir=${zlib}"
      "--with-xml2-lib=${libxml2}/lib"
      "--with-xml2-include=${libxml2}/include/libxml2"
      "--with-xslt-lib=${libxslt}/lib"
      "--with-xslt-include=${libxslt}/include"
      "--with-exslt-lib=${libxslt}/lib"
      "--with-exslt-include=${libxslt}/include"
      "--with-iconv-dir=${libiconv}"
    ];
  };

  pg = attrs: {
    buildFlags = [
      "--with-pg-config=${postgresql}/bin/pg_config"
    ];
  };

  rmagick = attrs: {
    buildInputs = [ imagemagick pkgconfig ];
  };

  sqlite3 = attrs: {
    buildFlags = [
      "--with-sqlite3-include=${sqlite}/include"
      "--with-sqlite3-lib=${sqlite}/lib"
    ];
  };

  therubyracer = attrs: {
    dontBuild = false;

    preInstall = ''
      ln -s ${clang}/bin/clang $TMPDIR/gcc
      ln -s ${clang}/bin/clang++ $TMPDIR/g++
      export PATH=$TMPDIR:$PATH
    '';

    postInstall = stdenv.lib.optionalString stdenv.isDarwin ''
      cat >> $out/nix-support/setup-hook <<EOF
        export DYLD_INSERT_LIBRARIES="$DYLD_INSERT_LIBRARIES''${!DYLD_INSERT_LIBRARIES:+:}${v8}/lib/libv8.dylib"
      EOF
    '';

    buildFlags = [
      "--with-v8-dir=${v8}" "--with-v8-include=${v8}/include"
      "--with-v8-lib=${v8}/lib"
    ];
  };
}
