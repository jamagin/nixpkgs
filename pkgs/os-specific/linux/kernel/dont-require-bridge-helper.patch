diff --git a/net/bridge/br_stp_if.c b/net/bridge/br_stp_if.c
index 4114687..49832c0 100644
--- a/net/bridge/br_stp_if.c
+++ b/net/bridge/br_stp_if.c
@@ -124,12 +124,6 @@ void br_stp_disable_port(struct net_bridge_port *p)
 
 static void br_stp_start(struct net_bridge *br)
 {
-	int r;
-	char *argv[] = { BR_STP_PROG, br->dev->name, "start", NULL };
-	char *envp[] = { NULL };
-
-	r = call_usermodehelper(BR_STP_PROG, argv, envp, UMH_WAIT_PROC);
-
 	spin_lock_bh(&br->lock);
 
 	if (br->bridge_forward_delay < BR_MIN_FORWARD_DELAY)
@@ -137,29 +131,16 @@ static void br_stp_start(struct net_bridge *br)
 	else if (br->bridge_forward_delay > BR_MAX_FORWARD_DELAY)
 		__br_set_forward_delay(br, BR_MAX_FORWARD_DELAY);
 
-	if (r == 0) {
-		br->stp_enabled = BR_USER_STP;
-		br_debug(br, "userspace STP started\n");
-	} else {
-		br->stp_enabled = BR_KERNEL_STP;
-		br_debug(br, "using kernel STP\n");
-
-		/* To start timers on any ports left in blocking */
-		br_port_state_selection(br);
-	}
+	br->stp_enabled = BR_USER_STP;
+	br_debug(br, "userspace STP started\n");
 
 	spin_unlock_bh(&br->lock);
 }
 
 static void br_stp_stop(struct net_bridge *br)
 {
-	int r;
-	char *argv[] = { BR_STP_PROG, br->dev->name, "stop", NULL };
-	char *envp[] = { NULL };
-
 	if (br->stp_enabled == BR_USER_STP) {
-		r = call_usermodehelper(BR_STP_PROG, argv, envp, UMH_WAIT_PROC);
-		br_info(br, "userspace STP stopped, return code %d\n", r);
+		br_info(br, "userspace STP stoppe\n");
 
 		/* To start timers on any ports left in blocking */
 		spin_lock_bh(&br->lock);
